#!/usr/bin/env bash

# Check for an interactive session
[ -z "$PS1" ] && return

# Integrate QT applications with GTK theme
export GTK2_RC_FILES="$HOME/.gtkrc-2.0"

# Set default text editor
export EDITOR="vim"

# Ignore duplicates in bash_history
HISTCONTROL=ignoreboth

# Ignore these commands in history file
HISTIGNORE=ls:ll:la:pwd:exit:df:clear

# Set PATH to include user's bin dir if it exists
if [ -d "$HOME/.bin" ]; then
    PATH="$HOME/.bin:$PATH"
fi

# Disable Ctrl+S to suspend terminal
stty -ixon

# ------------------------
# Prompt
# ------------------------
# Virtualenv prompt info
function virtualenv_prompt_info {
    [[ $VIRTUAL_ENV ]] && echo "[$(basename $VIRTUAL_ENV)] "
}

# Git prompt info
function parse_git_dirty {
  [[ -n $(git status -s ${SUBMODULE_SYNTAX}  2> /dev/null) ]] && echo "*"
}
function git_prompt_info {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || \
  ref=$(git rev-parse --short HEAD 2> /dev/null) || return
  echo "(${ref#refs/heads/}$(parse_git_dirty))"
}

# Color bash prompt
PS1='\[\033[01;32m\]\u@\h\[\033[00m\] \[\033[01;34m\]\w\[\033[00m\] $(virtualenv_prompt_info)\[\033[01;33m\]$(git_prompt_info)\[\033[00m\]
$ '

# ------------------------
# virtualenvwrapper
# ------------------------
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME
export VIRTUAL_ENV_DISABLE_PROMPT=1
source /usr/local/bin/virtualenvwrapper.sh

# Automatically activate Git projects' virtual environments based on the
# directory name of the project. Virtual environment name can be overridden
# by placing a .venv file in the project root with a virtualenv name in it
# Source: http://hmarr.com/2010/jan/19/making-virtualenv-play-nice-with-git/
function workon_cwd {
    # Check that this is a Git repo
    GIT_DIR=`git rev-parse --git-dir 2> /dev/null`
    if [ $? == 0 ]; then
        # Find the repo root and check for virtualenv name override
        GIT_DIR=`\cd $GIT_DIR; pwd`
        PROJECT_ROOT=`dirname "$GIT_DIR"`
        ENV_NAME=`basename "$PROJECT_ROOT"`
        if [ -f "$PROJECT_ROOT/.venv" ]; then
            ENV_NAME=`cat "$PROJECT_ROOT/.venv"`
        fi
        # Activate the environment only if it is not already active
        if [ "$VIRTUAL_ENV" != "$WORKON_HOME/$ENV_NAME" ]; then
            if [ -e "$WORKON_HOME/$ENV_NAME/bin/activate" ]; then
                workon "$ENV_NAME" && export CD_VIRTUAL_ENV="$ENV_NAME"
            fi
        fi
    elif [ $CD_VIRTUAL_ENV ]; then
        # We've just left the repo, deactivate the environment
        # Note: this only happens if the virtualenv was activated automatically
        deactivate && unset CD_VIRTUAL_ENV
    fi
}

# New cd function that does the virtualenv magic
function venv_cd {
    cd "$@" && workon_cwd
}

# ------------------------
# Aliases
# ------------------------
alias cd="venv_cd"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias ls=$([ `uname` == "Darwin" ] && echo "ls -G" || echo "ls --color=auto")
alias la="ls -alh"
alias grep="grep --color=auto"
alias e="emacsclient -t"
alias vssh="cd ~/twicevm; vagrant ssh"
