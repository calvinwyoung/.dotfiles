// Place your key bindings in this file to override the defaults
[
  // Commands
  {
    "key": "ctrl+x enter",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+x p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+u ctrl+space",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+shift+i",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+i",
    "command": "editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "ctrl+w",
    "command": "deleteWordLeft",
    "when": "editorFocus && !editorHasSelection"
  },
  {
    "key": "ctrl+w",
    "command": "editor.action.clipboardCutAction",
    "when": "editorFocus && editorHasSelection"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.deleteWordLeft",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  },
  {
    "key": "ctrl+c",
    "command": "editor.action.clipboardCopyAction",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+v",
    "command": "editor.action.clipboardPasteAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+v",
    "command": "-closeFindWidget",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+v",
    "command": "-emacs.cursorPageDown",
    "when": "editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+alt+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+.",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+.",
    "command": "problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "ctrl+x n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "shift+cmd+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "shift+cmd+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+x ctrl+c",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "alt+.",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+.",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "ctrl+x r",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+x shift+p",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+x r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+x shift+n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "ctrl+shift+8",
    "command": "editor.action.nextMatchFindAction",
    "when": "findWidgetVisible"
  },
  {
    "key": "ctrl+shift+8",
    "command": "actions.find",
    "when": "!findWidgetVisible"
  },
  {
    "key": "alt+space",
    "command": "vscode-editing-helpers.justOneSpace"
  },
  {
    "key": "alt+\\",
    "command": "vscode-editing-helpers.collapseWhitespaces"
  },
  {
    "key": "ctrl+x ;",
    "command": "vscode-editing-helpers.duplicateLineAndComment"
  },

  // Editing
  {
    "key": "alt+]",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+[",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+z",
    "command": "emacs.C-/",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+/",
    "command": "redo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+z",
    "command": "redo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+o",
    "command": "editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+o",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+o",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+o",
    "command": "-lineBreakInsert",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+;",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+;",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+;",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+;",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+x y",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+backspace",
    "command": "-deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+backspace",
    "command": "deleteWordLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+backspace",
    "command": "deleteWordLeft",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+delete",
    "command": "deleteWordRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+u",
    "command": "editor.action.transformToUppercase",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+l",
    "command": "editor.action.transformToLowercase",
    "when": "editorTextFocus && !editorReadonly"
  },

  // Navigation
  {
    "key": "alt+m",
    "command": "cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+alt+k",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+alt+j",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+alt+n",
    "command": "editorScroll",
    "args": {
      "to": "down",
      "by": "line",
      "revealCursor": true,
      "value": 10
    },
    "when": "editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+alt+p",
    "command": "editorScroll",
    "args": {
      "to": "up",
      "by": "line",
      "revealCursor": true,
      "value": 10
    },
    "when": "editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "shift+ctrl+tab",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+shift+alt+h",
    "command": "workbench.action.openPreviousRecentlyUsedEditor"
  },
  {
    "key": "ctrl+alt+l",
    "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+shift+alt+l",
    "command": "workbench.action.openNextRecentlyUsedEditor"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "alt+g",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+shift+right",
    "command": "cursorWordStartRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+left",
    "command": "cursorWordStartLeftSelect",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+x i",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+x `",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "ctrl+x shift+`",
    "command": "editor.action.marker.prevInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "ctrl+right",
    "command": "emacs.cursorWordRight",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+left",
    "command": "emacs.cursorWordLeft",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+x s",
    "command": "workbench.files.action.showActiveFileInExplorer"
  },
  {
    "key": "ctrl+shift+5",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  }
]
